<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set vars
_heading = "GAME#OVER"

_opt[0] = "restart"; _off[0] = 0.75
_opt[1] = "exit"; _off[1] = 0.8

_sel = 0
_opt_no = 2

//check_highscore()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///filler
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///navigation

//up/down
var UP = keyboard_check(vk_up) || gamepad_button_check(0,gp_padu) || gamepad_axis_value(0,gp_axislv)&lt;-0.5;
var DOWN = keyboard_check(vk_down) || gamepad_button_check(0,gp_padd) || gamepad_axis_value(0,gp_axislv)&gt;0.5;

if alarm[11] &lt;= 0 &amp;&amp; UP-DOWN != 0
{
    _sel = cycle(_sel+(DOWN-UP),0,_opt_no)
    alarm[11] = 15
} 

//selection

var ENTER = keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0,gp_face1) || gamepad_button_check_pressed(0,gp_start);

if ENTER
{
    switch _sel
    {
        case 0: //colour
            global.colour_mode = cycle(global.colour_mode+1,0,6)
            set_colors(global.colour_mode)
            break;
        case 1: //scale
            SC = cycle(SC+1,0,3)
            global.view_scale = _scale[SC]
            with obj_CRT event_user(0)
            break;
        case 2: // CRT
            global.crt = !global.crt
            with obj_CRT alarm[0] = 1
            break;
        case 3: //back
            room_goto(rm_menu)
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw menu
var xx = room_width/2

//tower
draw_sprite_ext(spr_tower,1,xx,0,1,1,0,global.c[1],1)

draw_set_color(c_white);draw_set_font(f_heading)
draw_set_valign(fa_center);draw_set_halign(fa_center)
//heading
draw_text(xx,room_height*0.3,_heading)

//selection
draw_set_color(c_blue);draw_set_font(f_hud)
var text;
    //set text
    text = _opt[_sel]
    if _sel = 0 text += string(_colour[global.colour_mode])
    if _sel = 1 text += string(_scale[SC])
    if _sel = 2 text += string(_CRT[global.crt])
    //outline
    draw_text(xx+1,room_height*_off[_sel],text)
    draw_text(xx-1,room_height*_off[_sel],text)
    draw_text(xx,room_height*_off[_sel]+1,text)
    draw_text(xx,room_height*_off[_sel]-1,text)

//options
draw_set_color(c_white)

draw_text(xx,room_height*_off[0],_opt[0]+string(_colour[global.colour_mode]))//colour mode
draw_text(xx,room_height*_off[1],_opt[1]+string(_scale[SC]))//scale
draw_text(xx,room_height*_off[2],_opt[2]+string(_CRT[global.crt]))//CRT
draw_text(xx,room_height*_off[3],_opt[3])

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
