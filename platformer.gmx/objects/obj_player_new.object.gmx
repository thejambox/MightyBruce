<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///controls
_left = vk_left
_right = vk_right
_jump1 = vk_up
_jump2 = vk_space
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set vars
_mode = global.mode

_speed = 2

if _mode = 4 _grav = 0.1 else _grav = 0.16
_jumpHeight = -3
grounded = 1
_jumpCount = 0
_wallJump = 5
_boost = 15
_boostCount = 0
_rot = 0
_col = irandom(255)
_vsp = 0
_hsp = 0
_hmov = 0
_sound = 5
alarm[0] = _sound
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///particles
p_tail = part_type_create()
part_type_sprite(p_tail,spr_tail,0,0,0)
part_type_alpha3(p_tail,0.4,0.4,0)
part_type_life(p_tail,50,50)


p_dots = part_type_create()
part_type_sprite(p_dots,spr_pixel,0,0,0)
part_type_scale(p_dots,3,3)
part_type_alpha2(p_dots,1,0)
part_type_blend(p_dots,1)
part_type_speed(p_dots,3,3,-0.1,0)
part_type_direction(p_dots,0,359,0,0)
part_type_life(p_dots,20,20)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setp sound
alarm[0] = _sound
if _hsp != 0 &amp;&amp; grounded audio_play_sound(s_step,1,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement

//Move left and right
_hsp = (keyboard_check(_right)-keyboard_check(_left))*_speed

//Jumping
switch (_mode){
    case 0: // single jump
        if (keyboard_check_pressed(_jump1)||keyboard_check_pressed(_jump2))
        {
            if (grounded) {_vsp = _jumpHeight;audio_play_sound(s_jump,1,0)}
        }
        break;
    case 1: //double jump
        if (keyboard_check_pressed(_jump1)||keyboard_check_pressed(_jump2))
        {
            if (grounded || _jumpCount &gt; 0) {_vsp = _jumpHeight;audio_play_sound(s_jump,1,0)}
            _jumpCount -= 1
        }
        break;
    case 2: // wall jump
        if (keyboard_check_pressed(_jump1)||keyboard_check_pressed(_jump2))
        {
            if (grounded) {_vsp = _jumpHeight;audio_play_sound(s_jump,1,0)} else
            if (place_meeting(x-1,y,Solid)||place_meeting(x+1,y,Solid))&amp;&amp;!grounded&amp;&amp;_hsp!=0{_vsp = _jumpHeight;_hmov = -(_wallJump*sign(_hsp));audio_play_sound(s_jump,1,0)}
        }
        if _hmov != 0 {_hsp+=_hmov;_hmov -= ((5/10)*sign(_hmov))}
        break;
    case 3: //jet pack
        if (keyboard_check(_jump1)||keyboard_check(_jump2))
        {
            _vsp = max(_vsp - 0.2,-1)
            if !audio_is_playing(s_jet) audio_play_sound(s_jet,1,0)
        }
        break;
    case 4: //flip gravity
        if (keyboard_check_pressed(_jump1)||keyboard_check_pressed(_jump2))
        {
            if (grounded){
                _vsp = _jumpHeight*sign(_grav)
                _grav *= -1
                image_yscale *= -1
                audio_play_sound(s_flip,1,0)
            }
        }
        break;
    case 5: //boost jump
        if (keyboard_check_pressed(_jump1)||keyboard_check_pressed(_jump2))
        {
            if (grounded) {_vsp = _jumpHeight;audio_play_sound(s_jump,1,0)}
            if (!grounded &amp;&amp; _jumpCount &gt;= 1) {_boostCount = _boost;audio_play_sound(s_boost,1,0)}
            _jumpCount -= 1
        }
        break;
}
if (!keyboard_check(_jump1)&amp;&amp;!keyboard_check(_jump2)&amp;&amp;_vsp&lt;0&amp;&amp;_mode!=4) _vsp *=0.33

if (place_meeting(x-1,y,Solid)||place_meeting(x+1,y,Solid))&amp;&amp;_hsp!=0&amp;&amp;_vsp&gt;0 {_vsp += _grav*0.2} else _vsp += _grav
    
//Vertical Collision
if place_meeting(x,y+_vsp,Solid) 
{
    while (!place_meeting(x,y+sign(_vsp),Solid)) y+=sign(_vsp);
    _vsp = 0;
    //double jump------------------------------------v
    if place_meeting(x,y+sign(_grav),Solid) {grounded = 1;_jumpCount = 2}
}
else
{
    grounded = 0;
}

//boost jump
if _boostCount &gt; 0{
    _vsp = 0;
    _hsp = _speed*image_xscale*2
    _boostCount -= 1
}

//Horizontal Collision
if place_meeting(x+_hsp,y,Solid)
{
    while (!place_meeting(x+sign(_hsp),y,Solid)) x+=sign(_hsp);
    _hsp = 0;
    //boost jump
    _boostCount = 0
}

//image speed
if _hsp != 0 image_speed = 0.2 else image_speed = 0
if _hsp!=0 image_xscale = sign(_hsp)
_rot = -15*sign(_hsp)*sign(_grav)
//_col = cycle(_col+1,0,255)

//Commit to movement
x += _hsp;
y += _vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tail
if instance_exists(obj_particles) {
    var i = point_direction(0,0,_hsp,_vsp)
    part_type_orientation(p_tail,i,i,0,0,0)
    if _hsp != 0 || _vsp != 0 part_particles_create(global.sys_tail,x-_hsp,y-_vsp,p_tail,1)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///die

repeat 100{
    part_particles_create(global.sys_blocks,x,y,p_dots,1)
}


with obj_spawn event_user(0)
with obj_pickupHolder event_user(0)
global.deaths += 1
audio_play_sound(s_die,1,0)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///self

draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,_rot,make_color_hsv(_col,255,255),1)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>3,3</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
