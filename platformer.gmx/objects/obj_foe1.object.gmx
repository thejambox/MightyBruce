<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_foe1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>FOE</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set vars
event_inherited()
_speed = 2  
_jump = -12
col = global.fc[0]

if random(100) &lt; 10{
    _speed = 3
    value *= 1.5
    col = global.fc[2]
}
hspeed = choose(-_speed,_speed)*random_range(0.8,1.2)
image_index = random(image_number)*random_range(0.8,1.2)
image_blend = col 
image_speed = _speed/15

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement
event_inherited()
var HSP,VSP;

//horizontal movement
HSP = hspeed;
image_xscale = sign(HSP)

//verticle movement
VSP = vspeed
var grounded = place_meeting(x,y+2,SOLID)
if !grounded VSP += global.GRAV else {VSP = global.vertSpeed;_flip = 0}


//collision detection
if place_meeting(x+HSP,y,SOLID){
    x = round(x)
    while (!place_meeting(x+sign(HSP),y,SOLID)) {x+=sign(HSP);}
    HSP *= -1
}
if place_meeting(x,y+VSP,SOLID){
    y = round(y)
    while (!place_meeting(x,y+sign(VSP),SOLID)) {y+=sign(VSP);}
    VSP = global.vertSpeed
}


//finalise movement
hspeed = HSP
vspeed = VSP


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///off screen
if y &gt; room_height+10 instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,12</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
